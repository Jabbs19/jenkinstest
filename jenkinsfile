def label = "jenkins-slave-${UUID.randomUUID().toString()}"

podTemplate(
    label: label,
    cloud: "openshift",
    containers: [
        containerTemplate(name: 'maven', image: 'maven:alpine', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'golang', image: 'golang:alpine', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'helm', image: 'docker-registry.default.svc:5000/openshift/helm:2.14.0', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'openshift', image: 'docker-registry.default.svc:5000/openshift/openshift-cli', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker', ttyEnabled: true, command: 'cat'),
		containerTemplate(name: 'ruby', image: 'ruby:2.5.5', ttyEnabled: true, command: 'cat')

    
    ]
) {
    node(label) {
        stage('Init') {
          sh """
            pwd
            env
            find ${HOME}
            df -h
	    echo 'itsworking'
            """
	    
	}
        stage('Checkout') {
            container('maven') {
                checkout scm
		//script{ datas = readYaml (file: 'manifest.yml') }
            	//echo datas.ear_file.deploy.toString()
	    
	    
	    def yaml = readYaml file: 'jenkinstest/values.yaml'
	    echo yaml.replicaCount.toString()
	    sh 'echo $yaml'
	    sh 'echo ${yaml}'
	    sh """
	    echo yaml.replicaCount
	    """	
	    sh """
	    echo 'past yaml'
	    """
	    }
        }
	container('openshift') {
            stage('OC Build Image') {
                sh 'oc whoami'
				//sh "oc start-build ${APP_NAME} --from-dir=./_site/ --wait --follow"
	    }
	   stage('OC Deploy to Stage') {
                sh 'oc login -u cluster-admin -p password https://lb.aheadaviation.local:8443 --insecure-skip-tls-verify'
                sh 'oc project shared-services'
                sh 'oc get pods'
                }
	 }
    	
	container('helm') {
            stage('package charts') {
                sh 'helm help'
            }
        }
        container('ruby') {
            stage('More tests') {
                sh 'ruby -v'
            }
        }
        
        
    }
}
